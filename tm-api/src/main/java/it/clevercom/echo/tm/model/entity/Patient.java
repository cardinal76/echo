package it.clevercom.echo.tm.model.entity;
// Generated 10-gen-2017 15.17.23 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Patient generated by hbm2java
 */
@Entity
@Table(name = "patient", catalog = "tmdw")
public class Patient implements java.io.Serializable {

	private Integer idPatient;
	private Login login;
	private Municipality municipality;
	private String name;
	private String surname;
	private Character gender;
	private String taxCode;
	private Date birthDate;
	private String nationality;
	private String homeAddress;
	private String phoneNumber;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateUser;
	private Set<Clinicfolder> clinicfolders = new HashSet<Clinicfolder>(0);
	private Set<Customthreshold> customthresholds = new HashSet<Customthreshold>(0);
	private Set<HealthkitPatient> healthkitPatients = new HashSet<HealthkitPatient>(0);
	private Set<Detectionplan> detectionplans = new HashSet<Detectionplan>(0);
	private Set<Message> messages = new HashSet<Message>(0);
	private Set<Nurse> nurses = new HashSet<Nurse>(0);
	private Set<PatientCaregiver> patientCaregivers = new HashSet<PatientCaregiver>(0);
	private Set<PhysicianPatient> physicianPatients = new HashSet<PhysicianPatient>(0);
	private Set<Meetingrequest> meetingrequests = new HashSet<Meetingrequest>(0);
	private Set<Treatmentplan> treatmentplans = new HashSet<Treatmentplan>(0);

	public Patient() {
	}

	public Patient(Login login, Municipality municipality, Date created, Date updated, boolean active,
			String updateUser) {
		this.login = login;
		this.municipality = municipality;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	public Patient(Login login, Municipality municipality, String name, String surname, Character gender,
			String taxCode, Date birthDate, String nationality, String homeAddress, String phoneNumber, Date created,
			Date updated, boolean active, String updateUser, Set<Clinicfolder> clinicfolders,
			Set<Customthreshold> customthresholds, Set<HealthkitPatient> healthkitPatients,
			Set<Detectionplan> detectionplans, Set<Message> messages, Set<Nurse> nurses,
			Set<PatientCaregiver> patientCaregivers, Set<PhysicianPatient> physicianPatients,
			Set<Meetingrequest> meetingrequests, Set<Treatmentplan> treatmentplans) {
		this.login = login;
		this.municipality = municipality;
		this.name = name;
		this.surname = surname;
		this.gender = gender;
		this.taxCode = taxCode;
		this.birthDate = birthDate;
		this.nationality = nationality;
		this.homeAddress = homeAddress;
		this.phoneNumber = phoneNumber;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
		this.clinicfolders = clinicfolders;
		this.customthresholds = customthresholds;
		this.healthkitPatients = healthkitPatients;
		this.detectionplans = detectionplans;
		this.messages = messages;
		this.nurses = nurses;
		this.patientCaregivers = patientCaregivers;
		this.physicianPatients = physicianPatients;
		this.meetingrequests = meetingrequests;
		this.treatmentplans = treatmentplans;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idPatient", unique = true, nullable = false)
	public Integer getIdPatient() {
		return this.idPatient;
	}

	public void setIdPatient(Integer idPatient) {
		this.idPatient = idPatient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idLogin", nullable = true)
	public Login getLogin() {
		return this.login;
	}

	public void setLogin(Login login) {
		this.login = login;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idMunicipality", nullable = true)
	public Municipality getMunicipality() {
		return this.municipality;
	}

	public void setMunicipality(Municipality municipality) {
		this.municipality = municipality;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", length = 100)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "gender", length = 1)
	public Character getGender() {
		return this.gender;
	}

	public void setGender(Character gender) {
		this.gender = gender;
	}

	@Column(name = "taxCode", length = 50)
	public String getTaxCode() {
		return this.taxCode;
	}

	public void setTaxCode(String taxCode) {
		this.taxCode = taxCode;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthDate", length = 10)
	public Date getBirthDate() {
		return this.birthDate;
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	@Column(name = "nationality", length = 100)
	public String getNationality() {
		return this.nationality;
	}

	public void setNationality(String nationality) {
		this.nationality = nationality;
	}

	@Column(name = "homeAddress", length = 100)
	public String getHomeAddress() {
		return this.homeAddress;
	}

	public void setHomeAddress(String homeAddress) {
		this.homeAddress = homeAddress;
	}

	@Column(name = "phoneNumber", length = 100)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Clinicfolder> getClinicfolders() {
		return this.clinicfolders;
	}

	public void setClinicfolders(Set<Clinicfolder> clinicfolders) {
		this.clinicfolders = clinicfolders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Customthreshold> getCustomthresholds() {
		return this.customthresholds;
	}

	public void setCustomthresholds(Set<Customthreshold> customthresholds) {
		this.customthresholds = customthresholds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<HealthkitPatient> getHealthkitPatients() {
		return this.healthkitPatients;
	}

	public void setHealthkitPatients(Set<HealthkitPatient> healthkitPatients) {
		this.healthkitPatients = healthkitPatients;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Detectionplan> getDetectionplans() {
		return this.detectionplans;
	}

	public void setDetectionplans(Set<Detectionplan> detectionplans) {
		this.detectionplans = detectionplans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "patients")
	public Set<Nurse> getNurses() {
		return this.nurses;
	}

	public void setNurses(Set<Nurse> nurses) {
		this.nurses = nurses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<PatientCaregiver> getPatientCaregivers() {
		return this.patientCaregivers;
	}

	public void setPatientCaregivers(Set<PatientCaregiver> patientCaregivers) {
		this.patientCaregivers = patientCaregivers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<PhysicianPatient> getPhysicianPatients() {
		return this.physicianPatients;
	}

	public void setPhysicianPatients(Set<PhysicianPatient> physicianPatients) {
		this.physicianPatients = physicianPatients;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Meetingrequest> getMeetingrequests() {
		return this.meetingrequests;
	}

	public void setMeetingrequests(Set<Meetingrequest> meetingrequests) {
		this.meetingrequests = meetingrequests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Treatmentplan> getTreatmentplans() {
		return this.treatmentplans;
	}

	public void setTreatmentplans(Set<Treatmentplan> treatmentplans) {
		this.treatmentplans = treatmentplans;
	}

}
