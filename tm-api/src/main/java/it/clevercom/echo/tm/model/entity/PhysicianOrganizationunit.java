package it.clevercom.echo.tm.model.entity;
// Generated 10-gen-2017 15.17.23 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PhysicianOrganizationunit generated by hbm2java
 */
@Entity
@Table(name = "physician_organizationunit", catalog = "tmdw")
public class PhysicianOrganizationunit implements java.io.Serializable {

	private PhysicianOrganizationunitId id;
	private Organizationunit organizationunit;
	private Physician physician;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateUser;

	public PhysicianOrganizationunit() {
	}

	public PhysicianOrganizationunit(PhysicianOrganizationunitId id, Organizationunit organizationunit,
			Physician physician, Date created, Date updated, boolean active, String updateUser) {
		this.id = id;
		this.organizationunit = organizationunit;
		this.physician = physician;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idPhysician", column = @Column(name = "idPhysician", nullable = false)),
			@AttributeOverride(name = "idOrganizationUnit", column = @Column(name = "idOrganizationUnit", nullable = false)) })
	public PhysicianOrganizationunitId getId() {
		return this.id;
	}

	public void setId(PhysicianOrganizationunitId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idOrganizationUnit", nullable = false, insertable = false, updatable = false)
	public Organizationunit getOrganizationunit() {
		return this.organizationunit;
	}

	public void setOrganizationunit(Organizationunit organizationunit) {
		this.organizationunit = organizationunit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idPhysician", nullable = false, insertable = false, updatable = false)
	public Physician getPhysician() {
		return this.physician;
	}

	public void setPhysician(Physician physician) {
		this.physician = physician;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

}
