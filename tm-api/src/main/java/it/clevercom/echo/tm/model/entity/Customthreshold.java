package it.clevercom.echo.tm.model.entity;
// Generated 17-gen-2017 15.09.29 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Customthreshold generated by hbm2java
 */
@Entity
@Table(name = "customthreshold", catalog = "tmdw")
public class Customthreshold implements java.io.Serializable {

	private Integer idCustomThreshold;
	private Patient patient;
	private Standardthreshold standardthreshold;
	private Float valueFrom;
	private Float valueTo;
	private Boolean mustGenerateAlert;
	private String commaEnumValues;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateUser;

	public Customthreshold() {
	}

	public Customthreshold(Patient patient, Standardthreshold standardthreshold, Date created, Date updated,
			boolean active, String updateUser) {
		this.patient = patient;
		this.standardthreshold = standardthreshold;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	public Customthreshold(Patient patient, Standardthreshold standardthreshold, Float valueFrom, Float valueTo,
			Boolean mustGenerateAlert, String commaEnumValues, Date created, Date updated, boolean active,
			String updateUser) {
		this.patient = patient;
		this.standardthreshold = standardthreshold;
		this.valueFrom = valueFrom;
		this.valueTo = valueTo;
		this.mustGenerateAlert = mustGenerateAlert;
		this.commaEnumValues = commaEnumValues;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idCustomThreshold", unique = true, nullable = false)
	public Integer getIdCustomThreshold() {
		return this.idCustomThreshold;
	}

	public void setIdCustomThreshold(Integer idCustomThreshold) {
		this.idCustomThreshold = idCustomThreshold;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idPatient", nullable = false)
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idStandardThreshold", nullable = false)
	public Standardthreshold getStandardthreshold() {
		return this.standardthreshold;
	}

	public void setStandardthreshold(Standardthreshold standardthreshold) {
		this.standardthreshold = standardthreshold;
	}

	@Column(name = "valueFrom", precision = 12, scale = 0)
	public Float getValueFrom() {
		return this.valueFrom;
	}

	public void setValueFrom(Float valueFrom) {
		this.valueFrom = valueFrom;
	}

	@Column(name = "valueTo", precision = 12, scale = 0)
	public Float getValueTo() {
		return this.valueTo;
	}

	public void setValueTo(Float valueTo) {
		this.valueTo = valueTo;
	}

	@Column(name = "mustGenerateAlert")
	public Boolean getMustGenerateAlert() {
		return this.mustGenerateAlert;
	}

	public void setMustGenerateAlert(Boolean mustGenerateAlert) {
		this.mustGenerateAlert = mustGenerateAlert;
	}

	@Column(name = "commaEnumValues")
	public String getCommaEnumValues() {
		return this.commaEnumValues;
	}

	public void setCommaEnumValues(String commaEnumValues) {
		this.commaEnumValues = commaEnumValues;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

}
