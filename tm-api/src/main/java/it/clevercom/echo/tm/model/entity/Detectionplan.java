package it.clevercom.echo.tm.model.entity;
// Generated 17-gen-2017 15.09.29 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Detectionplan generated by hbm2java
 */
@Entity
@Table(name = "detectionplan", catalog = "tmdw")
public class Detectionplan implements java.io.Serializable {

	private Integer idDetectionPlan;
	private Patient patient;
	private String name;
	private String description;
	private Date validFrom;
	private Date validTo;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateUser;
	private Set<Detectiontask> detectiontasks = new HashSet<Detectiontask>(0);
	private Set<Clinicreport> clinicreports = new HashSet<Clinicreport>(0);

	public Detectionplan() {
	}

	public Detectionplan(Patient patient, String name, Date created, Date updated, boolean active, String updateUser) {
		this.patient = patient;
		this.name = name;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	public Detectionplan(Patient patient, String name, String description, Date validFrom, Date validTo, Date created,
			Date updated, boolean active, String updateUser, Set<Detectiontask> detectiontasks,
			Set<Clinicreport> clinicreports) {
		this.patient = patient;
		this.name = name;
		this.description = description;
		this.validFrom = validFrom;
		this.validTo = validTo;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
		this.detectiontasks = detectiontasks;
		this.clinicreports = clinicreports;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idDetectionPlan", unique = true, nullable = false)
	public Integer getIdDetectionPlan() {
		return this.idDetectionPlan;
	}

	public void setIdDetectionPlan(Integer idDetectionPlan) {
		this.idDetectionPlan = idDetectionPlan;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idPatient", nullable = false)
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "validFrom", length = 10)
	public Date getValidFrom() {
		return this.validFrom;
	}

	public void setValidFrom(Date validFrom) {
		this.validFrom = validFrom;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "validTo", length = 10)
	public Date getValidTo() {
		return this.validTo;
	}

	public void setValidTo(Date validTo) {
		this.validTo = validTo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detectionplan")
	public Set<Detectiontask> getDetectiontasks() {
		return this.detectiontasks;
	}

	public void setDetectiontasks(Set<Detectiontask> detectiontasks) {
		this.detectiontasks = detectiontasks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detectionplan")
	public Set<Clinicreport> getClinicreports() {
		return this.clinicreports;
	}

	public void setClinicreports(Set<Clinicreport> clinicreports) {
		this.clinicreports = clinicreports;
	}

}
