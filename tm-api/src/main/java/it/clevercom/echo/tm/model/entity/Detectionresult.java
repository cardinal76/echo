package it.clevercom.echo.tm.model.entity;
// Generated 17-gen-2017 15.09.29 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Detectionresult generated by hbm2java
 */
@Entity
@Table(name = "detectionresult", catalog = "tmdw")
public class Detectionresult implements java.io.Serializable {

	private Integer idDetectionResult;
	private Detectiontask detectiontask;
	private Measurementtype measurementtype;
	private Float valueNum;
	private String valueString;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateUser;

	public Detectionresult() {
	}

	public Detectionresult(Detectiontask detectiontask, Measurementtype measurementtype, Date created, Date updated,
			boolean active, String updateUser) {
		this.detectiontask = detectiontask;
		this.measurementtype = measurementtype;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	public Detectionresult(Detectiontask detectiontask, Measurementtype measurementtype, Float valueNum,
			String valueString, Date created, Date updated, boolean active, String updateUser) {
		this.detectiontask = detectiontask;
		this.measurementtype = measurementtype;
		this.valueNum = valueNum;
		this.valueString = valueString;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idDetectionResult", unique = true, nullable = false)
	public Integer getIdDetectionResult() {
		return this.idDetectionResult;
	}

	public void setIdDetectionResult(Integer idDetectionResult) {
		this.idDetectionResult = idDetectionResult;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idDetectionTask", nullable = false)
	public Detectiontask getDetectiontask() {
		return this.detectiontask;
	}

	public void setDetectiontask(Detectiontask detectiontask) {
		this.detectiontask = detectiontask;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idMeasurementType", nullable = false)
	public Measurementtype getMeasurementtype() {
		return this.measurementtype;
	}

	public void setMeasurementtype(Measurementtype measurementtype) {
		this.measurementtype = measurementtype;
	}

	@Column(name = "valueNum", precision = 12, scale = 0)
	public Float getValueNum() {
		return this.valueNum;
	}

	public void setValueNum(Float valueNum) {
		this.valueNum = valueNum;
	}

	@Column(name = "valueString")
	public String getValueString() {
		return this.valueString;
	}

	public void setValueString(String valueString) {
		this.valueString = valueString;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

}
