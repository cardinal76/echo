package it.clevercom.echo.tm.model.entity;
// Generated 10-gen-2017 15.17.23 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Detectiontype generated by hbm2java
 */
@Entity
@Table(name = "detectiontype", catalog = "tmdw")
public class Detectiontype implements java.io.Serializable {

	private Integer idDetectionType;
	private String name;
	private String description;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateUser;
	private Set<Detectiontask> detectiontasks = new HashSet<Detectiontask>(0);
	private Set<DetectiontypeMeasurementtype> detectiontypeMeasurementtypes = new HashSet<DetectiontypeMeasurementtype>(
			0);

	public Detectiontype() {
	}

	public Detectiontype(String name, Date created, Date updated, boolean active, String updateUser) {
		this.name = name;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	public Detectiontype(String name, String description, Date created, Date updated, boolean active, String updateUser,
			Set<Detectiontask> detectiontasks, Set<DetectiontypeMeasurementtype> detectiontypeMeasurementtypes) {
		this.name = name;
		this.description = description;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
		this.detectiontasks = detectiontasks;
		this.detectiontypeMeasurementtypes = detectiontypeMeasurementtypes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idDetectionType", unique = true, nullable = false)
	public Integer getIdDetectionType() {
		return this.idDetectionType;
	}

	public void setIdDetectionType(Integer idDetectionType) {
		this.idDetectionType = idDetectionType;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detectiontype")
	public Set<Detectiontask> getDetectiontasks() {
		return this.detectiontasks;
	}

	public void setDetectiontasks(Set<Detectiontask> detectiontasks) {
		this.detectiontasks = detectiontasks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detectiontype")
	public Set<DetectiontypeMeasurementtype> getDetectiontypeMeasurementtypes() {
		return this.detectiontypeMeasurementtypes;
	}

	public void setDetectiontypeMeasurementtypes(Set<DetectiontypeMeasurementtype> detectiontypeMeasurementtypes) {
		this.detectiontypeMeasurementtypes = detectiontypeMeasurementtypes;
	}

}
