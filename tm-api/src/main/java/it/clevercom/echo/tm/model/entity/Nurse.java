package it.clevercom.echo.tm.model.entity;
// Generated 10-gen-2017 15.17.23 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Nurse generated by hbm2java
 */
@Entity
@Table(name = "nurse", catalog = "tmdw")
public class Nurse implements java.io.Serializable {

	private Integer idNurse;
	private Login login;
	private String name;
	private String surname;
	private Character gender;
	private String telephone;
	private String skype;
	private Date dateOfBirth;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateUser;
	private Set<Patient> patients = new HashSet<Patient>(0);
	private Set<NurseOrganizationunit> nurseOrganizationunits = new HashSet<NurseOrganizationunit>(0);

	public Nurse() {
	}

	public Nurse(Login login, Date created, Date updated, boolean active, String updateUser) {
		this.login = login;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	public Nurse(Login login, String name, String surname, Character gender, String telephone, String skype,
			Date dateOfBirth, Date created, Date updated, boolean active, String updateUser, Set<Patient> patients,
			Set<NurseOrganizationunit> nurseOrganizationunits) {
		this.login = login;
		this.name = name;
		this.surname = surname;
		this.gender = gender;
		this.telephone = telephone;
		this.skype = skype;
		this.dateOfBirth = dateOfBirth;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
		this.patients = patients;
		this.nurseOrganizationunits = nurseOrganizationunits;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idNurse", unique = true, nullable = false)
	public Integer getIdNurse() {
		return this.idNurse;
	}

	public void setIdNurse(Integer idNurse) {
		this.idNurse = idNurse;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idLogin", nullable = false)
	public Login getLogin() {
		return this.login;
	}

	public void setLogin(Login login) {
		this.login = login;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", length = 100)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "gender", length = 1)
	public Character getGender() {
		return this.gender;
	}

	public void setGender(Character gender) {
		this.gender = gender;
	}

	@Column(name = "telephone", length = 100)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "skype", length = 100)
	public String getSkype() {
		return this.skype;
	}

	public void setSkype(String skype) {
		this.skype = skype;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateOfBirth", length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "nurse_patient", catalog = "tmdw", joinColumns = {
			@JoinColumn(name = "idNurse", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "idPatient", nullable = false, updatable = false) })
	public Set<Patient> getPatients() {
		return this.patients;
	}

	public void setPatients(Set<Patient> patients) {
		this.patients = patients;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nurse")
	public Set<NurseOrganizationunit> getNurseOrganizationunits() {
		return this.nurseOrganizationunits;
	}

	public void setNurseOrganizationunits(Set<NurseOrganizationunit> nurseOrganizationunits) {
		this.nurseOrganizationunits = nurseOrganizationunits;
	}

}
