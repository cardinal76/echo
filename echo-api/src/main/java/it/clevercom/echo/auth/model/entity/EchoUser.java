package it.clevercom.echo.auth.model.entity;
// Generated 10-gen-2017 15.17.23 by Hibernate Tools 5.2.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Login generated by hbm2java
 */
@Entity
@Table(name = "login", catalog = "tmdw")
public class EchoUser implements java.io.Serializable {

	private Integer idLogin;
	//private Languagetype languagetype;
	private String username;
	private String password;
	private String email;
	private Date lastPasswordReset;
	private String authorities;
	private boolean adLogon;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateUser;
	/*private Set<Patient> patients = new HashSet<Patient>(0);
	private Set<Worklist> worklists = new HashSet<Worklist>(0);
	private Set<Caregiver> caregivers = new HashSet<Caregiver>(0);
	private Set<Nurse> nurses = new HashSet<Nurse>(0);
	private Set<Physician> physicians = new HashSet<Physician>(0);*/

	public EchoUser() {
	}

	/*public Login(Languagetype languagetype, String username, String password, String email, String authorities,
			boolean adLogon, Date created, Date updated, boolean active, String updateUser) {
		this.languagetype = languagetype;
		this.username = username;
		this.password = password;
		this.email = email;
		this.authorities = authorities;
		this.adLogon = adLogon;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	public Login(Languagetype languagetype, String username, String password, String email, Date lastPasswordReset,
			String authorities, boolean adLogon, Date created, Date updated, boolean active, String updateUser,
			Set<Patient> patients, Set<Worklist> worklists, Set<Caregiver> caregivers, Set<Nurse> nurses,
			Set<Physician> physicians) {
		this.languagetype = languagetype;
		this.username = username;
		this.password = password;
		this.email = email;
		this.lastPasswordReset = lastPasswordReset;
		this.authorities = authorities;
		this.adLogon = adLogon;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
		this.patients = patients;
		this.worklists = worklists;
		this.caregivers = caregivers;
		this.nurses = nurses;
		this.physicians = physicians;
	}*/

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idLogin", unique = true, nullable = false)
	public Integer getIdLogin() {
		return this.idLogin;
	}

	public void setIdLogin(Integer idLogin) {
		this.idLogin = idLogin;
	}

	/*
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idLanguageType", nullable = false)
	public Languagetype getLanguagetype() {
		return this.languagetype;
	}

	public void setLanguagetype(Languagetype languagetype) {
		this.languagetype = languagetype;
	}
	*/

	@Column(name = "username", nullable = false, length = 100)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "email", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastPasswordReset", length = 19)
	public Date getLastPasswordReset() {
		return this.lastPasswordReset;
	}

	public void setLastPasswordReset(Date lastPasswordReset) {
		this.lastPasswordReset = lastPasswordReset;
	}

	@Column(name = "authorities", nullable = false)
	public String getAuthorities() {
		return this.authorities;
	}

	public void setAuthorities(String authorities) {
		this.authorities = authorities;
	}

	@Column(name = "adLogon", nullable = false)
	public boolean isAdLogon() {
		return this.adLogon;
	}

	public void setAdLogon(boolean adLogon) {
		this.adLogon = adLogon;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "login")
	public Set<Patient> getPatients() {
		return this.patients;
	}

	public void setPatients(Set<Patient> patients) {
		this.patients = patients;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "login")
	public Set<Worklist> getWorklists() {
		return this.worklists;
	}

	public void setWorklists(Set<Worklist> worklists) {
		this.worklists = worklists;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "login")
	public Set<Caregiver> getCaregivers() {
		return this.caregivers;
	}

	public void setCaregivers(Set<Caregiver> caregivers) {
		this.caregivers = caregivers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "login")
	public Set<Nurse> getNurses() {
		return this.nurses;
	}

	public void setNurses(Set<Nurse> nurses) {
		this.nurses = nurses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "login")
	public Set<Physician> getPhysicians() {
		return this.physicians;
	}

	public void setPhysicians(Set<Physician> physicians) {
		this.physicians = physicians;
	}
	*/
}
