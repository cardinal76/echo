package it.clevercom.echo.rd.model.entity;
// Generated 10-feb-2017 17.38.23 by Hibernate Tools 5.1.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Radiologictask generated by hbm2java
 */
@Entity
@Table(name = "radiologictask", catalog = "rmdw")
public class Radiologictask implements java.io.Serializable {

	private Integer idRadiologicalTask;
	private Patient patient;
	private Status status;
	private Set<Report> reports = new HashSet<Report>(0);
	private Set<Worklist> worklists = new HashSet<Worklist>(0);
	private Set<Order> orders = new HashSet<Order>(0);

	public Radiologictask() {
	}

	public Radiologictask(Patient patient, Status status) {
		this.patient = patient;
		this.status = status;
	}

	public Radiologictask(Patient patient, Status status, Set<Report> reports, Set<Worklist> worklists,
			Set<Order> orders) {
		this.patient = patient;
		this.status = status;
		this.reports = reports;
		this.worklists = worklists;
		this.orders = orders;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idRadiologicalTask", unique = true, nullable = false)
	public Integer getIdRadiologicalTask() {
		return this.idRadiologicalTask;
	}

	public void setIdRadiologicalTask(Integer idRadiologicalTask) {
		this.idRadiologicalTask = idRadiologicalTask;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idPatient", nullable = false)
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "statusCode", nullable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "radiologictask")
	public Set<Report> getReports() {
		return this.reports;
	}

	public void setReports(Set<Report> reports) {
		this.reports = reports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "radiologictask")
	public Set<Worklist> getWorklists() {
		return this.worklists;
	}

	public void setWorklists(Set<Worklist> worklists) {
		this.worklists = worklists;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "radiologictask")
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

}
