package it.clevercom.echo.rd.model.entity;
// Generated 10-feb-2017 17.38.23 by Hibernate Tools 5.1.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Modality generated by hbm2java
 */
@Entity
@Table(name = "modality", catalog = "rmdw")
public class Modality implements java.io.Serializable {

	private Integer idModality;
	private Organizationunit organizationunit;
	private String name;
	private String description;
	private Date created;
	private Date updated;
	private String userUpdate;
	private boolean active;
	private Set<Service> services = new HashSet<Service>(0);
	private Set<Worklist> worklists = new HashSet<Worklist>(0);

	public Modality() {
	}

	public Modality(Organizationunit organizationunit, String name, Date created, Date updated, String userUpdate,
			boolean active) {
		this.organizationunit = organizationunit;
		this.name = name;
		this.created = created;
		this.updated = updated;
		this.userUpdate = userUpdate;
		this.active = active;
	}

	public Modality(Organizationunit organizationunit, String name, String description, Date created, Date updated,
			String userUpdate, boolean active, Set<Service> services, Set<Worklist> worklists) {
		this.organizationunit = organizationunit;
		this.name = name;
		this.description = description;
		this.created = created;
		this.updated = updated;
		this.userUpdate = userUpdate;
		this.active = active;
		this.services = services;
		this.worklists = worklists;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idModality", unique = true, nullable = false)
	public Integer getIdModality() {
		return this.idModality;
	}

	public void setIdModality(Integer idModality) {
		this.idModality = idModality;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idOrganizationUnit", nullable = false)
	public Organizationunit getOrganizationunit() {
		return this.organizationunit;
	}

	public void setOrganizationunit(Organizationunit organizationunit) {
		this.organizationunit = organizationunit;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "userUpdate", nullable = false, length = 100)
	public String getUserUpdate() {
		return this.userUpdate;
	}

	public void setUserUpdate(String userUpdate) {
		this.userUpdate = userUpdate;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "modality_service", catalog = "rmdw", joinColumns = {
			@JoinColumn(name = "idModality", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "idService", nullable = false, updatable = false) })
	public Set<Service> getServices() {
		return this.services;
	}

	public void setServices(Set<Service> services) {
		this.services = services;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "modality")
	public Set<Worklist> getWorklists() {
		return this.worklists;
	}

	public void setWorklists(Set<Worklist> worklists) {
		this.worklists = worklists;
	}

}
