package it.clevercom.echo.rd.model.entity;
// Generated 13-feb-2017 9.08.37 by Hibernate Tools 5.1.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Report generated by hbm2java
 */
@Entity
@Table(name = "report", catalog = "rmdw")
public class Report implements java.io.Serializable {

	private Integer idReport;
	private Radiologictask radiologictask;
	private Status status;
	private Worklist worklist;
	private Integer accessionNumber;
	private Date creationDate;
	private Date completionDate;
	private String body;
	private String rejectReason;
	private Date created;
	private Date updated;
	private String userUpdate;
	private boolean active;
	private Set<Reporttracking> reporttrackings = new HashSet<Reporttracking>(0);
	private Set<User> users = new HashSet<User>(0);

	public Report() {
	}

	public Report(Radiologictask radiologictask, Status status, Worklist worklist, Date creationDate, String body,
			Date created, Date updated, String userUpdate, boolean active) {
		this.radiologictask = radiologictask;
		this.status = status;
		this.worklist = worklist;
		this.creationDate = creationDate;
		this.body = body;
		this.created = created;
		this.updated = updated;
		this.userUpdate = userUpdate;
		this.active = active;
	}

	public Report(Radiologictask radiologictask, Status status, Worklist worklist, Integer accessionNumber,
			Date creationDate, Date completionDate, String body, String rejectReason, Date created, Date updated,
			String userUpdate, boolean active, Set<Reporttracking> reporttrackings, Set<User> users) {
		this.radiologictask = radiologictask;
		this.status = status;
		this.worklist = worklist;
		this.accessionNumber = accessionNumber;
		this.creationDate = creationDate;
		this.completionDate = completionDate;
		this.body = body;
		this.rejectReason = rejectReason;
		this.created = created;
		this.updated = updated;
		this.userUpdate = userUpdate;
		this.active = active;
		this.reporttrackings = reporttrackings;
		this.users = users;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idReport", unique = true, nullable = false)
	public Integer getIdReport() {
		return this.idReport;
	}

	public void setIdReport(Integer idReport) {
		this.idReport = idReport;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idRadiologicalTask", nullable = false)
	public Radiologictask getRadiologictask() {
		return this.radiologictask;
	}

	public void setRadiologictask(Radiologictask radiologictask) {
		this.radiologictask = radiologictask;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "statusCode", nullable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idWorklist", nullable = false)
	public Worklist getWorklist() {
		return this.worklist;
	}

	public void setWorklist(Worklist worklist) {
		this.worklist = worklist;
	}

	@Column(name = "accessionNumber")
	public Integer getAccessionNumber() {
		return this.accessionNumber;
	}

	public void setAccessionNumber(Integer accessionNumber) {
		this.accessionNumber = accessionNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creationDate", nullable = false, length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "completionDate", length = 19)
	public Date getCompletionDate() {
		return this.completionDate;
	}

	public void setCompletionDate(Date completionDate) {
		this.completionDate = completionDate;
	}

	@Column(name = "body", nullable = false)
	public String getBody() {
		return this.body;
	}

	public void setBody(String body) {
		this.body = body;
	}

	@Column(name = "rejectReason")
	public String getRejectReason() {
		return this.rejectReason;
	}

	public void setRejectReason(String rejectReason) {
		this.rejectReason = rejectReason;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "userUpdate", nullable = false, length = 100)
	public String getUserUpdate() {
		return this.userUpdate;
	}

	public void setUserUpdate(String userUpdate) {
		this.userUpdate = userUpdate;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "report")
	public Set<Reporttracking> getReporttrackings() {
		return this.reporttrackings;
	}

	public void setReporttrackings(Set<Reporttracking> reporttrackings) {
		this.reporttrackings = reporttrackings;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "reports")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
