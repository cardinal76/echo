package it.clevercom.echo.rd.model.entity;
// Generated 10-feb-2017 17.38.23 by Hibernate Tools 5.1.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Patient generated by hbm2java
 */
@Entity
@Table(name = "patient", catalog = "rmdw")
public class Patient implements java.io.Serializable {

	private Integer idPatient;
	private Municipality municipality;
	private String name;
	private String surname;
	private Date dateOfBirth;
	private Character gender;
	private String residenceStreetAddress;
	private String residenceCityCode;
	private String residenceCountry;
	private String domicileStreetAddress;
	private String domicileCityCode;
	private String domicileCountry;
	private String maritalStatus;
	private String birthPlace;
	private String citizenshipId;
	private String citizenshipDesc;
	private Date deathDate;
	private String taxCode;
	private String nationality;
	private String phoneNumber;
	private Date created;
	private Date updated;
	private String updateUser;
	private boolean active;
	private Set<Hl7patient> hl7patients = new HashSet<Hl7patient>(0);
	private Set<Radiologictask> radiologictasks = new HashSet<Radiologictask>(0);

	public Patient() {
	}

	public Patient(Municipality municipality, Date created, Date updated, String updateUser, boolean active) {
		this.municipality = municipality;
		this.created = created;
		this.updated = updated;
		this.updateUser = updateUser;
		this.active = active;
	}

	public Patient(Municipality municipality, String name, String surname, Date dateOfBirth, Character gender,
			String residenceStreetAddress, String residenceCityCode, String residenceCountry,
			String domicileStreetAddress, String domicileCityCode, String domicileCountry, String maritalStatus,
			String birthPlace, String citizenshipId, String citizenshipDesc, Date deathDate, String taxCode,
			String nationality, String phoneNumber, Date created, Date updated, String updateUser, boolean active,
			Set<Hl7patient> hl7patients, Set<Radiologictask> radiologictasks) {
		this.municipality = municipality;
		this.name = name;
		this.surname = surname;
		this.dateOfBirth = dateOfBirth;
		this.gender = gender;
		this.residenceStreetAddress = residenceStreetAddress;
		this.residenceCityCode = residenceCityCode;
		this.residenceCountry = residenceCountry;
		this.domicileStreetAddress = domicileStreetAddress;
		this.domicileCityCode = domicileCityCode;
		this.domicileCountry = domicileCountry;
		this.maritalStatus = maritalStatus;
		this.birthPlace = birthPlace;
		this.citizenshipId = citizenshipId;
		this.citizenshipDesc = citizenshipDesc;
		this.deathDate = deathDate;
		this.taxCode = taxCode;
		this.nationality = nationality;
		this.phoneNumber = phoneNumber;
		this.created = created;
		this.updated = updated;
		this.updateUser = updateUser;
		this.active = active;
		this.hl7patients = hl7patients;
		this.radiologictasks = radiologictasks;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idPatient", unique = true, nullable = false)
	public Integer getIdPatient() {
		return this.idPatient;
	}

	public void setIdPatient(Integer idPatient) {
		this.idPatient = idPatient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idMunicipality", nullable = false)
	public Municipality getMunicipality() {
		return this.municipality;
	}

	public void setMunicipality(Municipality municipality) {
		this.municipality = municipality;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", length = 100)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateOfBirth", length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "gender", length = 1)
	public Character getGender() {
		return this.gender;
	}

	public void setGender(Character gender) {
		this.gender = gender;
	}

	@Column(name = "residenceStreetAddress", length = 120)
	public String getResidenceStreetAddress() {
		return this.residenceStreetAddress;
	}

	public void setResidenceStreetAddress(String residenceStreetAddress) {
		this.residenceStreetAddress = residenceStreetAddress;
	}

	@Column(name = "residenceCityCode", length = 50)
	public String getResidenceCityCode() {
		return this.residenceCityCode;
	}

	public void setResidenceCityCode(String residenceCityCode) {
		this.residenceCityCode = residenceCityCode;
	}

	@Column(name = "residenceCountry", length = 4)
	public String getResidenceCountry() {
		return this.residenceCountry;
	}

	public void setResidenceCountry(String residenceCountry) {
		this.residenceCountry = residenceCountry;
	}

	@Column(name = "domicileStreetAddress", length = 120)
	public String getDomicileStreetAddress() {
		return this.domicileStreetAddress;
	}

	public void setDomicileStreetAddress(String domicileStreetAddress) {
		this.domicileStreetAddress = domicileStreetAddress;
	}

	@Column(name = "domicileCityCode", length = 50)
	public String getDomicileCityCode() {
		return this.domicileCityCode;
	}

	public void setDomicileCityCode(String domicileCityCode) {
		this.domicileCityCode = domicileCityCode;
	}

	@Column(name = "domicileCountry", length = 4)
	public String getDomicileCountry() {
		return this.domicileCountry;
	}

	public void setDomicileCountry(String domicileCountry) {
		this.domicileCountry = domicileCountry;
	}

	@Column(name = "maritalStatus", length = 20)
	public String getMaritalStatus() {
		return this.maritalStatus;
	}

	public void setMaritalStatus(String maritalStatus) {
		this.maritalStatus = maritalStatus;
	}

	@Column(name = "birthPlace", length = 250)
	public String getBirthPlace() {
		return this.birthPlace;
	}

	public void setBirthPlace(String birthPlace) {
		this.birthPlace = birthPlace;
	}

	@Column(name = "citizenshipId", length = 20)
	public String getCitizenshipId() {
		return this.citizenshipId;
	}

	public void setCitizenshipId(String citizenshipId) {
		this.citizenshipId = citizenshipId;
	}

	@Column(name = "citizenshipDesc", length = 199)
	public String getCitizenshipDesc() {
		return this.citizenshipDesc;
	}

	public void setCitizenshipDesc(String citizenshipDesc) {
		this.citizenshipDesc = citizenshipDesc;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "deathDate", length = 10)
	public Date getDeathDate() {
		return this.deathDate;
	}

	public void setDeathDate(Date deathDate) {
		this.deathDate = deathDate;
	}

	@Column(name = "taxCode", length = 50)
	public String getTaxCode() {
		return this.taxCode;
	}

	public void setTaxCode(String taxCode) {
		this.taxCode = taxCode;
	}

	@Column(name = "nationality", length = 100)
	public String getNationality() {
		return this.nationality;
	}

	public void setNationality(String nationality) {
		this.nationality = nationality;
	}

	@Column(name = "phoneNumber", length = 100)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Hl7patient> getHl7patients() {
		return this.hl7patients;
	}

	public void setHl7patients(Set<Hl7patient> hl7patients) {
		this.hl7patients = hl7patients;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Radiologictask> getRadiologictasks() {
		return this.radiologictasks;
	}

	public void setRadiologictasks(Set<Radiologictask> radiologictasks) {
		this.radiologictasks = radiologictasks;
	}

}
