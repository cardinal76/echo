package it.clevercom.echo.sso.model.entity;
// Generated Jan 16, 2017 2:51:50 PM by Hibernate Tools 5.2.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Login generated by hbm2java
 */
@Entity
@Table(name = "login", catalog = "sso", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class Login implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer idLogin;
	private String username;
	private String password;
	private String email;
	private Date lastPasswordReset;
	private Boolean adLogon;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateUser;
	private List<LoginApplication> loginApplications = new ArrayList<LoginApplication>();

	public Login() {
	}

	public Login(String username, String password, String email, Date lastPasswordReset, Date created, Date updated,
			boolean active, String updateUser) {
		this.username = username;
		this.password = password;
		this.email = email;
		this.lastPasswordReset = lastPasswordReset;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
	}

	public Login(String username, String password, String email, Date lastPasswordReset, Boolean adLogon, Date created,
			Date updated, boolean active, String updateUser, List<LoginApplication> loginApplications) {
		this.username = username;
		this.password = password;
		this.email = email;
		this.lastPasswordReset = lastPasswordReset;
		this.adLogon = adLogon;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateUser = updateUser;
		this.loginApplications = loginApplications;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idLogin", unique = true, nullable = false)
	public Integer getIdLogin() {
		return this.idLogin;
	}

	public void setIdLogin(Integer idLogin) {
		this.idLogin = idLogin;
	}

	@Column(name = "username", unique = true, nullable = false, length = 100)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastPasswordReset", nullable = false, length = 19)
	public Date getLastPasswordReset() {
		return this.lastPasswordReset;
	}

	public void setLastPasswordReset(Date lastPasswordReset) {
		this.lastPasswordReset = lastPasswordReset;
	}

	@Column(name = "adLogon")
	public Boolean getAdLogon() {
		return this.adLogon;
	}

	public void setAdLogon(Boolean adLogon) {
		this.adLogon = adLogon;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateUser", nullable = false, length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "login")
	public List<LoginApplication> getLoginApplications() {
		return this.loginApplications;
	}

	public void setLoginApplications(List<LoginApplication> loginApplications) {
		this.loginApplications = loginApplications;
	}

}
